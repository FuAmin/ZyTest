<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="客服邮箱-电子发票demo" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的全局变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ip" elementType="Argument">
            <stringProp name="Argument.name">ip</stringProp>
            <stringProp name="Argument.value">192.168.100.32</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">IP</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">10133</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">端口号</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">协议</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${ip}</stringProp>
        <stringProp name="HTTPSampler.port">${port}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="电子发票邮件推送接口(30)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1501035763000</longProp>
        <longProp name="ThreadGroup.end_time">1501035763000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="KHSJHM_TS" elementType="Argument">
              <stringProp name="Argument.name">KHSJHM_TS</stringProp>
              <stringProp name="Argument.value">&quot;18510239236&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">客户手机号码</stringProp>
            </elementProp>
            <elementProp name="KHBS_TS" elementType="Argument">
              <stringProp name="Argument.name">KHBS_TS</stringProp>
              <stringProp name="Argument.value">&quot;khbs&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">客户标识</stringProp>
            </elementProp>
            <elementProp name="KHMC_TS" elementType="Argument">
              <stringProp name="Argument.name">KHMC_TS</stringProp>
              <stringProp name="Argument.value">&quot;测试&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">客户名称</stringProp>
            </elementProp>
            <elementProp name="KHLX_TS" elementType="Argument">
              <stringProp name="Argument.name">KHLX_TS</stringProp>
              <stringProp name="Argument.value">&quot;1&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">客户类型</stringProp>
            </elementProp>
            <elementProp name="KHYXDZ_TS" elementType="Argument">
              <stringProp name="Argument.name">KHYXDZ_TS</stringProp>
              <stringProp name="Argument.value">&quot;13027724969@139.com&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">客户邮箱地址</stringProp>
            </elementProp>
            <elementProp name="KHGSD_TS" elementType="Argument">
              <stringProp name="Argument.name">KHGSD_TS</stringProp>
              <stringProp name="Argument.value">&quot;000&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">客户归属地</stringProp>
            </elementProp>
            <elementProp name="KHFQQD_TS" elementType="Argument">
              <stringProp name="Argument.name">KHFQQD_TS</stringProp>
              <stringProp name="Argument.value">&quot;1&quot;</stringProp>
              <stringProp name="Argument.desc">客户请求发起渠道</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="KPSJ_TS" elementType="Argument">
              <stringProp name="Argument.name">KPSJ_TS</stringProp>
              <stringProp name="Argument.value">&quot;${__time(,)}&quot;</stringProp>
              <stringProp name="Argument.desc">开票时间</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="KPQD_TS" elementType="Argument">
              <stringProp name="Argument.name">KPQD_TS</stringProp>
              <stringProp name="Argument.value">&quot;1&quot;</stringProp>
              <stringProp name="Argument.desc">开票渠道</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="FPJE_TS" elementType="Argument">
              <stringProp name="Argument.name">FPJE_TS</stringProp>
              <stringProp name="Argument.value">&quot;999.99&quot;</stringProp>
              <stringProp name="Argument.desc">发票金额</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="FPMXPM_TS" elementType="Argument">
              <stringProp name="Argument.name">FPMXPM_TS</stringProp>
              <stringProp name="Argument.value">&quot;testfornow&quot;</stringProp>
              <stringProp name="Argument.desc">发票明细品目</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="FPPDFWJ_TS" elementType="Argument">
              <stringProp name="Argument.name">FPPDFWJ_TS</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">发票PDF文件</stringProp>
            </elementProp>
            <elementProp name="SFBS_TS" elementType="Argument">
              <stringProp name="Argument.name">SFBS_TS</stringProp>
              <stringProp name="Argument.value">&quot;000&quot;</stringProp>
              <stringProp name="Argument.desc">省份标识</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">application/json</stringProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7144:电子发票邮件推送接口-正常发送邮件" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7144}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

vars.put(&quot;YWLSH_TS&quot;,YWLSH);

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7144&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7144&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7144&quot;);

if(result.contains(&quot;0000&quot;) &amp;&amp; result.contains(&quot;接受处理&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送成功，结果推送成功&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送成功，结果推送失败，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送成功，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7145:电子发票邮件推送接口-手机号为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7145}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHSJHM_TS_7145" elementType="Argument">
                <stringProp name="Argument.name">KHSJHM_TS_7145</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户手机号码</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM =vars.get(&quot;KHSJHM_TS_7145&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);

String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7145&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7145&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7145&quot;);

if(result.contains(&quot;9100&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7146:电子发票邮件推送接口-手机号不是数字校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7146}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHSJHM_TS_7146" elementType="Argument">
                <stringProp name="Argument.name">KHSJHM_TS_7146</stringProp>
                <stringProp name="Argument.value">&quot;test&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户手机号码</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM =vars.get(&quot;KHSJHM_TS_7146&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);

String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7146&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7146&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7146&quot;);

if(result.contains(&quot;9100&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7147:电子发票邮件推送接口-手机号小于11位数字校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7147}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHSJHM_TS_7147" elementType="Argument">
                <stringProp name="Argument.name">KHSJHM_TS_7147</stringProp>
                <stringProp name="Argument.value">&quot;185102392&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户手机号码</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM =vars.get(&quot;KHSJHM_TS_7147&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);

String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7147&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7147&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7147&quot;);

if(result.contains(&quot;9100&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7148:电子发票邮件推送接口-手机号大于11位数字校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7148}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHSJHM_TS_7148" elementType="Argument">
                <stringProp name="Argument.name">KHSJHM_TS_7148</stringProp>
                <stringProp name="Argument.value">&quot;1851023923666&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户手机号码</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM =vars.get(&quot;KHSJHM_TS_7148&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);

String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7148&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7148&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7148&quot;);

if(result.contains(&quot;9100&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7149:电子发票邮件推送接口-客户标识为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7149}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHBS_TS_7149" elementType="Argument">
                <stringProp name="Argument.name">KHBS_TS_7149</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户标识</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS_7149&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7149&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7149&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7149&quot;);

if(result.contains(&quot;9101&quot;) &amp;&amp; result.contains(&quot;报文信息客户标识不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7150:电子发票邮件推送接口-客户类型为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7150}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHLX_TS_7150" elementType="Argument">
                <stringProp name="Argument.name">KHLX_TS_7150</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户类型</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS_7150&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7150&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7150&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7150&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少客户类型&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7151:电子发票邮件推送接口-客户类型不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7151}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHLX_TS_7151" elementType="Argument">
                <stringProp name="Argument.name">KHLX_TS_7151</stringProp>
                <stringProp name="Argument.value">&quot;100&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户类型</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS_7151&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7151&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7151&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7151&quot;);

if(result.contains(&quot;9103&quot;) &amp;&amp; result.contains(&quot;报文信息客户类型不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7152:电子发票邮件推送接口-KHYXDZ客户邮箱地址为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7152}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHYXDZ_TS_7152" elementType="Argument">
                <stringProp name="Argument.name">KHYXDZ_TS_7152</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户邮箱地址</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS_7152&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7152&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7152&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7152&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少客户邮箱地址&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7153:电子发票邮件推送接口-KHYXDZ客户邮箱地址不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7153}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHYXDZ_TS_7153" elementType="Argument">
                <stringProp name="Argument.name">KHYXDZ_TS_7153</stringProp>
                <stringProp name="Argument.value">&quot;100&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户邮箱地址</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS_7153&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7153&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7153&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7153&quot;);

if(result.contains(&quot;9104&quot;) &amp;&amp; result.contains(&quot;客户邮箱地址错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7154:电子发票邮件推送接口-KHGSD客户归属地为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7154}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHGSD_TS_7154" elementType="Argument">
                <stringProp name="Argument.name">KHGSD_TS_7154</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户归属地</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS_7154&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7154&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7154&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7154&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少客户归属地&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7155:电子发票邮件推送接口-KHGSD客户归属地不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7155}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHGSD_TS_7155" elementType="Argument">
                <stringProp name="Argument.name">KHGSD_TS_7155</stringProp>
                <stringProp name="Argument.value">&quot;tests234353454656sdgdfgfh&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户归属地</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS_7155&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7155&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7155&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7155&quot;);

if(result.contains(&quot;9105&quot;) &amp;&amp; result.contains(&quot;报文信息客户归属地不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7156:电子发票邮件推送接口-KHFQQD客户发起渠道为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7156}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHFQQD_TS_7156" elementType="Argument">
                <stringProp name="Argument.name">KHFQQD_TS_7156</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">客户请求发起渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS_7156&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7156&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7156&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7156&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少客户发起渠道&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7157:电子发票邮件推送接口-KHFQQD客户发起渠道不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7157}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KHFQQD_TS_7157" elementType="Argument">
                <stringProp name="Argument.name">KHFQQD_TS_7157</stringProp>
                <stringProp name="Argument.value">&quot;12345&quot;</stringProp>
                <stringProp name="Argument.desc">客户请求发起渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS_7157&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7157&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7157&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7157&quot;);

if(result.contains(&quot;9106&quot;) &amp;&amp; result.contains(&quot;报文信息客户发起渠道错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7158:电子发票邮件推送接口-KPSJ开票时间为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7158}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KPSJ_TS_7158" elementType="Argument">
                <stringProp name="Argument.name">KPSJ_TS_7158</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">开票时间</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS_7158&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7158&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7158&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7158&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少开票时间&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7159:电子发票邮件推送接口-KPSJ开票时间不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7159}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KPSJ_TS_7159" elementType="Argument">
                <stringProp name="Argument.name">KPSJ_TS_7159</stringProp>
                <stringProp name="Argument.value">&quot;test&quot;</stringProp>
                <stringProp name="Argument.desc">开票时间</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS_7159&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7159&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7159&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7159&quot;);

if(result.contains(&quot;9104&quot;) &amp;&amp; result.contains(&quot;请求日期错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7160:电子发票邮件推送接口-KPQD开票渠道为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7160}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KPQD_TS_7160" elementType="Argument">
                <stringProp name="Argument.name">KPQD_TS_7160</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">开票渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS_7160&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7160&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7160&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7160&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少开票渠道&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7161:电子发票邮件推送接口-KPQD开票渠道不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7161}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="KPQD_TS_7161" elementType="Argument">
                <stringProp name="Argument.name">KPQD_TS_7161</stringProp>
                <stringProp name="Argument.value">&quot;123&quot;</stringProp>
                <stringProp name="Argument.desc">开票渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS_7161&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7161&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7161&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7161&quot;);

if(result.contains(&quot;9109&quot;) &amp;&amp; result.contains(&quot;报文信息开票渠道错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7162:电子发票邮件推送接口-FPJE发票金额为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7162}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPJE_TS_7162" elementType="Argument">
                <stringProp name="Argument.name">FPJE_TS_7162</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">发票金额</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS_7162&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7162&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7162&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7162&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少开票金额&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7163:电子发票邮件推送接口-FPJE发票金额不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7163}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPJE_TS_7163" elementType="Argument">
                <stringProp name="Argument.name">FPJE_TS_7163</stringProp>
                <stringProp name="Argument.value">&quot;test&quot;</stringProp>
                <stringProp name="Argument.desc">发票金额</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS_7163&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7163&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7163&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7163&quot;);

if(result.contains(&quot;9110&quot;) &amp;&amp; result.contains(&quot;报文信息发票金额不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7164:电子发票邮件推送接口-FPMXPM发票明细品目为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7164}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPMXPM_TS_7164" elementType="Argument">
                <stringProp name="Argument.name">FPMXPM_TS_7164</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">发票明细品目</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS_7164&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7164&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7164&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7164&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少发票明细条目&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7165:电子发票邮件推送接口-FPMXPM发票明细品目不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7165}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPMXPM_TS_7165" elementType="Argument">
                <stringProp name="Argument.name">FPMXPM_TS_7165</stringProp>
                <stringProp name="Argument.value">&quot;test222222222222222222222222222222222222222222222222222222222222222222222222233333333333333333333333333&quot;</stringProp>
                <stringProp name="Argument.desc">发票明细品目</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS_7165&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7165&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7165&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7165&quot;);

if(result.contains(&quot;9111&quot;) &amp;&amp; result.contains(&quot;发票明细字段超长&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7166:电子发票邮件推送接口-FPPDFW发票PDF文件为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7166}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPPDFWJ_TS_7166" elementType="Argument">
                <stringProp name="Argument.name">FPPDFWJ_TS_7166</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">发票PDF文件</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = vars.get(&quot;FPPDFWJ_TS_7166&quot;);  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7166&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7166&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7166&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少发票文件信息&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7167:电子发票邮件推送接口-FPPDFW发票PDF文件不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7167}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPPDFWJ_TS_7167" elementType="Argument">
                <stringProp name="Argument.name">FPPDFWJ_TS_7167</stringProp>
                <stringProp name="Argument.value">&quot;test555555555sfsdfsdfnvnbbvnnnnnnnnnnnnnnnndgfdasdsssssssssssssssssffffffffffffffffffffffffffffffffffhhhhhhhhhhhhhhhhjjjjjjjjjjjjjjjjjjjjjjjjj&quot;</stringProp>
                <stringProp name="Argument.desc">发票PDF文件</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = vars.get(&quot;FPPDFWJ_TS_7167&quot;);  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7167&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7167&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7167&quot;);

if(result.contains(&quot;9116&quot;) &amp;&amp; result.contains(&quot;MD5校验失败&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7168:电子发票邮件推送接口-FPJYM MD5校验码为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7168}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPJYM_TS_7168" elementType="Argument">
                <stringProp name="Argument.name">FPJYM_TS_7168</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">MD5校验码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = vars.get(&quot;FPJYM_TS_7168&quot;);  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7168&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7168&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7168&quot;);

if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少MD5校验码&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7169:电子发票邮件推送接口-FPJYM MD5校验码不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7169}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="FPJYM_TS_7169" elementType="Argument">
                <stringProp name="Argument.name">FPJYM_TS_7169</stringProp>
                <stringProp name="Argument.value">&quot;testdhkjsahdkjhdkjahdkjhjhjhjhjhjhfdfdfdfd&quot;</stringProp>
                <stringProp name="Argument.desc">MD5校验码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = vars.get(&quot;FPJYM_TS_7169&quot;);  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7169&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7169&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7169&quot;);

if(result.contains(&quot;9116&quot;) &amp;&amp; result.contains(&quot;MD5校验失败&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7170:电子发票邮件推送接口-SFBS省份标识为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7170}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SFBS_TS_7170" elementType="Argument">
                <stringProp name="Argument.name">SFBS_TS_7170</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">省份标识</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS_7170&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7170&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7170&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7170&quot;);


if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少省份标识&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7171:电子发票邮件推送接口-SFBS省份标识不合法校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7171}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="SFBS_TS_7171" elementType="Argument">
                <stringProp name="Argument.name">SFBS_TS_7171</stringProp>
                <stringProp name="Argument.value">&quot;100000071&quot;</stringProp>
                <stringProp name="Argument.desc">省份标识</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS_7171&quot;); //省份标识  
String  YWLSH =&quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7171&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7171&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7171&quot;);


if(result.contains(&quot;9105&quot;) &amp;&amp; result.contains(&quot;省份标识错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7172:电子发票邮件推送接口-YWLSH业务流水号为空校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7172}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="YWLSH_TS_7172" elementType="Argument">
                <stringProp name="Argument.name">YWLSH_TS_7172</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">业务流水号</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =vars.get(&quot;YWLSH_TS_7172&quot;);;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7172&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7172&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7172&quot;);


if(result.contains(&quot;0001&quot;) &amp;&amp; result.contains(&quot;报文信息缺少业务流水&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7173:电子发票邮件推送接口-YWLSH业务流水号重复校验" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;soapenv:Envelope&#xd;
    xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&#xd;
    xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
    &lt;soapenv:Body&gt;&#xd;
        &lt;invoiceMailSend&#xd;
            xmlns=&quot;http://service.ebs.cmos.com&quot;&gt;&#xd;
            &lt;in0&gt;${request_data_ts_7173}&lt;/in0&gt;&#xd;
        &lt;/invoiceMailSend&gt;&#xd;
    &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/services/IOutService</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="YWLSH_TS_7172" elementType="Argument">
                <stringProp name="Argument.name">YWLSH_TS_7172</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">业务流水号</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;

String KHSJHM = vars.get(&quot;KHSJHM_TS&quot;); //客户手机号码
String  KHBS = vars.get(&quot;KHBS_TS&quot;); //客户标识
String  KHMC = vars.get(&quot;KHMC_TS&quot;); //客户名称
String  KHLX = vars.get(&quot;KHLX_TS&quot;); //客户类型
String  KHYXDZ = vars.get(&quot;KHYXDZ_TS&quot;); //客户邮箱地址
String  KHGSD = vars.get(&quot;KHGSD_TS&quot;);   //客户归属地
String  KHFQQD = vars.get(&quot;KHFQQD_TS&quot;); //客户发起渠道
String  KPSJ = vars.get(&quot;KPSJ_TS&quot;); //开票时间
String  KPQD = vars.get(&quot;KPQD_TS&quot;); //开票渠道
String  FPJE = vars.get(&quot;FPJE_TS&quot;); //发票金额
String  FPMXPM = vars.get(&quot;FPMXPM_TS&quot;); //发票明细品目 
String  FPPDFWJ = &quot;\&quot;&quot;+ vars.get(&quot;FPPDFWJ_TS&quot;) +&quot;\&quot;&quot;;  //发票PDF文件
String  FPJYM = &quot;\&quot;&quot;+  Md5Util.MD5(vars.get(&quot;FPPDFWJ_TS&quot;)) +&quot;\&quot;&quot;;  //MD5校验码
String  SFBS = vars.get(&quot;SFBS_TS&quot;); //省份标识  
String  YWLSH =vars.get(&quot;YWLSH_TS&quot;);;  //业务流水号

 String request_data = &quot;{\&quot;DZFPYJTS_KHXX\&quot;:{\&quot;KHSJHM\&quot;:&quot;+KHSJHM+&quot;,\&quot;KHBS\&quot;:&quot;+KHBS+&quot;,\&quot;KHLX\&quot;:&quot;+KHLX+&quot;,\&quot;KHYXDZ\&quot;:&quot;+KHYXDZ+&quot;,\&quot;KHMC\&quot;:&quot;+KHMC+&quot;,\&quot;KHGSD\&quot;:&quot;+KHGSD+&quot;,\&quot;KHFQQD\&quot;:&quot;+KHFQQD+&quot;},\&quot;DZFPYJTS_FPXX\&quot;:{\&quot;KPSJ\&quot;:&quot;+KPSJ+&quot;,\&quot;KPQD\&quot;:&quot;+KPQD+&quot;,\&quot;FPJE\&quot;:&quot;+FPJE+&quot;,\&quot;FPMXPM\&quot;:&quot;+FPMXPM+&quot;,\&quot;FPPDFWJ\&quot;:&quot;+FPPDFWJ+&quot;,\&quot;FPJYM\&quot;:&quot;+FPJYM+&quot;,\&quot;SFBS\&quot;:&quot;+SFBS+&quot;,\&quot;YWLSH\&quot;:&quot;+YWLSH+&quot;}}&quot;;

//log.info(&quot;###########################&quot;+request_data);
String data = DESDecode.encryptBasedDes(request_data);

vars.put(&quot;request_data_ts_7173&quot;,data);

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_ts_7173&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_ts_7173&quot;);


if(result.contains(&quot;9102&quot;) &amp;&amp; result.contains(&quot;业务流水号重复&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		String strJs = StringUtils.substringAfter(result, &quot;{&quot;);
		strJs = StringUtils.substringBefore(strJs, &quot;}&quot;);		
		JSONObject obj = new JSONObject(&quot;{&quot;+strJs+&quot;}&quot;);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;returnMessage&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="批量发票邮件推送接口(33)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1501035763000</longProp>
        <longProp name="ThreadGroup.end_time">1501035763000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="sourceID" elementType="Argument">
              <stringProp name="Argument.name">sourceID</stringProp>
              <stringProp name="Argument.value">&quot;19&quot;</stringProp>
              <stringProp name="Argument.desc">发起入口标识</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userAddress" elementType="Argument">
              <stringProp name="Argument.name">userAddress</stringProp>
              <stringProp name="Argument.value">&quot;13027724969@139.com&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">客户邮箱地址</stringProp>
            </elementProp>
            <elementProp name="provCode" elementType="Argument">
              <stringProp name="Argument.name">provCode</stringProp>
              <stringProp name="Argument.value">&quot;000&quot;</stringProp>
              <stringProp name="Argument.desc">省份标识</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operationChannel" elementType="Argument">
              <stringProp name="Argument.name">operationChannel</stringProp>
              <stringProp name="Argument.value">&quot;1&quot;</stringProp>
              <stringProp name="Argument.desc">开票渠道</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="money" elementType="Argument">
              <stringProp name="Argument.name">money</stringProp>
              <stringProp name="Argument.value">&quot;52.66&quot;</stringProp>
              <stringProp name="Argument.desc">发票金额</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phone" elementType="Argument">
              <stringProp name="Argument.name">phone</stringProp>
              <stringProp name="Argument.value">&quot;18739916367&quot;</stringProp>
              <stringProp name="Argument.desc">手机号码</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userProv" elementType="Argument">
              <stringProp name="Argument.name">userProv</stringProp>
              <stringProp name="Argument.value">&quot;河南省&quot;</stringProp>
              <stringProp name="Argument.desc">客户归属地</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userType" elementType="Argument">
              <stringProp name="Argument.name">userType</stringProp>
              <stringProp name="Argument.value">&quot;1&quot;</stringProp>
              <stringProp name="Argument.desc">客户类型</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pdfFileName" elementType="Argument">
              <stringProp name="Argument.name">pdfFileName</stringProp>
              <stringProp name="Argument.value">&quot;12345678901234567890123456789012345678901234567890&quot;</stringProp>
              <stringProp name="Argument.desc">发票PDF文件名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userName" elementType="Argument">
              <stringProp name="Argument.name">userName</stringProp>
              <stringProp name="Argument.value">&quot;luyf&quot;</stringProp>
              <stringProp name="Argument.desc">客户名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="userId" elementType="Argument">
              <stringProp name="Argument.name">userId</stringProp>
              <stringProp name="Argument.value">&quot;77156BFB9B12C15277B9B12&quot;</stringProp>
              <stringProp name="Argument.desc">客户标识</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="items" elementType="Argument">
              <stringProp name="Argument.name">items</stringProp>
              <stringProp name="Argument.value">&quot;租机费;租卡费;租机押金&quot;</stringProp>
              <stringProp name="Argument.desc">发票明细品目</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operationTime" elementType="Argument">
              <stringProp name="Argument.name">operationTime</stringProp>
              <stringProp name="Argument.value">&quot;${__time(,)}&quot;</stringProp>
              <stringProp name="Argument.desc">开票时间</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pdfFileCode" elementType="Argument">
              <stringProp name="Argument.name">pdfFileCode</stringProp>
              <stringProp name="Argument.value">&quot;file&quot;</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cloudPhone" elementType="Argument">
              <stringProp name="Argument.name">cloudPhone</stringProp>
              <stringProp name="Argument.value">&quot;18739916367&quot;</stringProp>
              <stringProp name="Argument.desc">手机号码</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sn" elementType="Argument">
              <stringProp name="Argument.name">sn</stringProp>
              <stringProp name="Argument.value">&quot;${__Random(10000000000,99999999999,)}&quot;</stringProp>
              <stringProp name="Argument.desc">业务流水号</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="channelId" elementType="Argument">
              <stringProp name="Argument.name">channelId</stringProp>
              <stringProp name="Argument.value">&quot;1&quot;</stringProp>
              <stringProp name="Argument.desc">客户发起渠道</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="file" elementType="Argument">
              <stringProp name="Argument.name">file</stringProp>
              <stringProp name="Argument.value">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">上传文件的路径</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">contentType</stringProp>
              <stringProp name="Header.value">multipart/form-data;charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7198:批量发票邮件推送接口-正常发送邮件" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7198}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
vars.put(&quot;sn_7207&quot;,sn); //业务流水号

//log.info(&quot;********************sn&quot;+sn);

String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7198&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7198&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7198&quot;);

if(result.contains(&quot;0000&quot;) &amp;&amp; result.contains(&quot;接受处理&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送成功，结果推送成功&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送成功，结果推送失败，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送成功，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7207:批量发票邮件推送接口-业务流水号sn重复校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7207}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments"/>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= vars.get(&quot;sn_7207&quot;);  //业务流水号
//log.info(&quot;********************sn_7207&quot;+sn);

String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7207&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7207&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7207&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;流水号在缓存中已存在&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7199:批量发票邮件推送接口-发起入口标识sourceID为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7199}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sourceID_7199" elementType="Argument">
                <stringProp name="Argument.name">sourceID_7199</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">发起入口标识</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID_7199&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7199&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7199&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7199&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;sourceID为空&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7200:批量发票邮件推送接口-客户邮箱地址userAddress为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7200}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userAddress_7200" elementType="Argument">
                <stringProp name="Argument.name">userAddress_7200</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户邮箱地址</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress_7200&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7200&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7200&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7200&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息缺少邮箱地址&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7201:批量发票邮件推送接口-客户邮箱地址userAddress不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7201}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userAddress_7201" elementType="Argument">
                <stringProp name="Argument.name">userAddress_7201</stringProp>
                <stringProp name="Argument.value">&quot;100&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">客户邮箱地址</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress_7201&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7201&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7201&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7201&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;客户邮箱地址错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7202:批量发票邮件推送接口-客户发起渠道channelId为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7202}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="channelId_7202" elementType="Argument">
                <stringProp name="Argument.name">channelId_7202</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">客户发起渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId_7202&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7202&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7202&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7202&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息缺少用户发起渠道&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7203:批量发票邮件推送接口-客户发起渠道channelId不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7203}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="channelId_7203" elementType="Argument">
                <stringProp name="Argument.name">channelId_7203</stringProp>
                <stringProp name="Argument.value">&quot;12345&quot;</stringProp>
                <stringProp name="Argument.desc">客户发起渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId_7203&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7203&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7203&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7203&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息客户发起渠道错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7204:批量发票邮件推送接口-省份标识provCode为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7204}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="provCode_7204" elementType="Argument">
                <stringProp name="Argument.name">provCode_7204</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">省份标识</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode_7204&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7204&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7204&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7204&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息缺少省份编码&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7205:批量发票邮件推送接口-省份标识provCode不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7205}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="provCode_7205" elementType="Argument">
                <stringProp name="Argument.name">provCode_7205</stringProp>
                <stringProp name="Argument.value">&quot;100000071&quot;</stringProp>
                <stringProp name="Argument.desc">省份标识</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode_7205&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号

String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7205&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7205&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7205&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;省份标识错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7206:批量发票邮件推送接口-业务流水号sn为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7206}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sn_7206" elementType="Argument">
                <stringProp name="Argument.name">sn_7206</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">业务流水号</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= vars.get(&quot;sn_7206&quot;);  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7206&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7206&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7206&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息缺少业务流水号&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7208:批量发票邮件推送接口-压缩文件MD5 md5Code为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7208}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="md5Code_7208" elementType="Argument">
                <stringProp name="Argument.name">md5Code_7208</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">压缩文件MD5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= vars.get(&quot;md5Code_7208&quot;);
String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7208&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7208&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7208&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文缺少md5Code字段&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7209:批量发票邮件推送接口-压缩文件MD5 md5Code不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7209}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="md5Code_7209" elementType="Argument">
                <stringProp name="Argument.name">md5Code_7209</stringProp>
                <stringProp name="Argument.value">&quot;rwerwrrtrefdgfgfhgjgjhgcnhjh&quot;</stringProp>
                <stringProp name="Argument.desc">压缩文件MD5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= vars.get(&quot;md5Code_7209&quot;);
String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7209&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7209&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7209&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;发票压缩文件md5校验失败&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7210:批量发票邮件推送接口-手机号码phone为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7210}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone_7210" elementType="Argument">
                <stringProp name="Argument.name">phone_7210</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone_7210&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7210&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7210&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7210&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7211:批量发票邮件推送接口-手机号码phone不是数字校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7211}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone_7211" elementType="Argument">
                <stringProp name="Argument.name">phone_7211</stringProp>
                <stringProp name="Argument.value">&quot;test&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone_7211&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7211&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7211&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7211&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7212:批量发票邮件推送接口-手机号码phone小于11位数字校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7212}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone_7212" elementType="Argument">
                <stringProp name="Argument.name">phone_7212</stringProp>
                <stringProp name="Argument.value">&quot;187399163&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone_7212&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7212&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7212&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7212&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7213:批量发票邮件推送接口-手机号码phone大于11位数字校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7213}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="phone_7213" elementType="Argument">
                <stringProp name="Argument.name">phone_7213</stringProp>
                <stringProp name="Argument.value">&quot;18739916333333333333&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone_7213&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7213&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7213&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7213&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息客户手机号不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7214:批量发票邮件推送接口-手机号码cloudPhone为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7214}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="cloudPhone_7214" elementType="Argument">
                <stringProp name="Argument.name">cloudPhone_7214</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone_7214&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7214&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7214&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7214&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息缺少彩云手机号&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7215:批量发票邮件推送接口-手机号码cloudPhone不是数字校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7215}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="cloudPhone_7215" elementType="Argument">
                <stringProp name="Argument.name">cloudPhone_7215</stringProp>
                <stringProp name="Argument.value">&quot;test&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone_7215&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7215&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7215&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7215&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息手机号码不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7216:批量发票邮件推送接口-手机号码cloudPhone小于11位数字校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7216}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="cloudPhone_7216" elementType="Argument">
                <stringProp name="Argument.name">cloudPhone_7216</stringProp>
                <stringProp name="Argument.value">&quot;187399163&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone_7216&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7216&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7216&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7216&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息手机号码不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7217:批量发票邮件推送接口-手机号码cloudPhone大于11位数字校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7217}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="cloudPhone_7217" elementType="Argument">
                <stringProp name="Argument.name">cloudPhone_7217</stringProp>
                <stringProp name="Argument.value">&quot;1873991636723&quot;</stringProp>
                <stringProp name="Argument.desc">手机号码</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone_7217&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7217&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7217&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7217&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息手机号码不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7218:批量发票邮件推送接口-客户类型userType为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7218}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userType_7128" elementType="Argument">
                <stringProp name="Argument.name">userType_7128</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">客户类型</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType_7128&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7218&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7218&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7218&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息二级字段缺少客户类型&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7219:批量发票邮件推送接口-客户类型userType不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7219}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userType_7129" elementType="Argument">
                <stringProp name="Argument.name">userType_7129</stringProp>
                <stringProp name="Argument.value">&quot;100&quot;</stringProp>
                <stringProp name="Argument.desc">客户类型</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">&quot;13027724969@139.com&quot;</stringProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType_7129&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7219&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7219&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7219&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息客户类型不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7220:批量发票邮件推送接口-客户归属地userProv为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7220}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="userProv_7220" elementType="Argument">
                <stringProp name="Argument.name">userProv_7220</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">客户归属地</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv_7220&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7220&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7220&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7220&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息二级字段缺少客户归属地&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7221:批量发票邮件推送接口-开票时间operationTime为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7221}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="operationTime_7221" elementType="Argument">
                <stringProp name="Argument.name">operationTime_7221</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">开票时间</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime_7221&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7221&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7221&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7221&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息二级字段缺少开票时间&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7222:批量发票邮件推送接口-开票时间operationTime不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7222}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="operationTime_7222" elementType="Argument">
                <stringProp name="Argument.name">operationTime_7222</stringProp>
                <stringProp name="Argument.value">&quot;test&quot;</stringProp>
                <stringProp name="Argument.desc">开票时间</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime_7222&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7222&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7222&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7222&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;请求日期错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7223:批量发票邮件推送接口-开票渠道operationChannel为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7223}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="operationChannel_7223" elementType="Argument">
                <stringProp name="Argument.name">operationChannel_7223</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">开票渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel_7223&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7223&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7223&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7223&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息二级字段缺少开票渠道&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7224:批量发票邮件推送接口-开票渠道operationChannel不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7224}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="operationChannel_7224" elementType="Argument">
                <stringProp name="Argument.name">operationChannel_7224</stringProp>
                <stringProp name="Argument.value">&quot;123&quot;</stringProp>
                <stringProp name="Argument.desc">开票渠道</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel_7224&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7224&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7224&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7224&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息开票渠道错误&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7225:批量发票邮件推送接口-发票金额money为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7225}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="money_7225" elementType="Argument">
                <stringProp name="Argument.name">money_7225</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">发票金额</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money_7225&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7225&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7225&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7225&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息二级字段缺少金额数目&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7226:批量发票邮件推送接口-发票金额money不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7226}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="money_7226" elementType="Argument">
                <stringProp name="Argument.name">money_7226</stringProp>
                <stringProp name="Argument.value">&quot;test&quot;</stringProp>
                <stringProp name="Argument.desc">发票金额</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money_7226&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7226&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7226&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7226&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息发票金额不合法&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7227:批量发票邮件推送接口-发票明细品目items为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7227}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="items_7227" elementType="Argument">
                <stringProp name="Argument.name">items_7227</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">发票明细品目</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items_7227&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7227&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7227&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7227&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息二级字段缺少业务明细&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7228:批量发票邮件推送接口-发票明细品目items不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7228}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="items_7228" elementType="Argument">
                <stringProp name="Argument.name">items_7228</stringProp>
                <stringProp name="Argument.value">&quot;test2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222221test2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222221&quot;</stringProp>
                <stringProp name="Argument.desc">发票明细品目</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items_7228&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7228&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7228&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7228&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;发票明细字段超长&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7229:批量发票邮件推送接口-发票PDF文件名称pdfFileName为空校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7229}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pdfFileName_7229" elementType="Argument">
                <stringProp name="Argument.name">pdfFileName_7229</stringProp>
                <stringProp name="Argument.value">&quot;&quot;</stringProp>
                <stringProp name="Argument.desc">发票PDF文件名称</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName_7229&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7229&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7229&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7229&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;报文信息二级字段缺少pdf文件名称&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kfyx-7230:批量发票邮件推送接口-发票PDF文件名称pdfFileName不合法校验" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/APIauto/kefuyouxiang/linux-Apache.zip" elementType="HTTPFileArg">
                <stringProp name="File.path">/home/APIauto/kefuyouxiang/linux-Apache.zip</stringProp>
                <stringProp name="File.paramname">zipfile</stringProp>
                <stringProp name="File.mimetype">application/zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="jsonStr" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonStr_7230}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">jsonStr</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/mailinterface/email/mixtureEmail/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="基础参数" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pdfFileName_7230" elementType="Argument">
                <stringProp name="Argument.name">pdfFileName_7230</stringProp>
                <stringProp name="Argument.value">&quot;test22222221test22222221test22222221test22222221122&quot;</stringProp>
                <stringProp name="Argument.desc">发票PDF文件名称</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters">transdata_0</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.desdecode.DESDecode;
import com.desdecode.Md5Util;
import java.util.UUID;
import java.util.Date;



String userAddress=vars.get(&quot;userAddress&quot;);
String provCode=vars.get(&quot;provCode&quot;);
String operationChannel=vars.get(&quot;operationChannel&quot;);
String money=vars.get(&quot;money&quot;);
String phone=vars.get(&quot;phone&quot;);
String userProv=vars.get(&quot;userProv&quot;);
String userType=vars.get(&quot;userType&quot;);
String pdfFileName=vars.get(&quot;pdfFileName_7230&quot;);
String userName=vars.get(&quot;userName&quot;);
String userId=vars.get(&quot;userId&quot;);
String items=vars.get(&quot;items&quot;);
String operationTime=vars.get(&quot;operationTime&quot;);
String pdfFileCode=vars.get(&quot;pdfFileCode&quot;);
String cloudPhone=vars.get(&quot;cloudPhone&quot;);
String sn= &quot;\&quot;&quot;+ UUID.randomUUID().toString() +&quot;\&quot;&quot;;  //业务流水号
String file=vars.get(&quot;file&quot;);
String md5Code= &quot;\&quot;&quot;+Md5Util.getMd5File(file)+&quot;\&quot;&quot;;

String channelId=vars.get(&quot;channelId&quot;);
String sourceID=vars.get(&quot;sourceID&quot;);


String reqData = &quot;{\&quot;userAddress\&quot;:&quot;+userAddress+&quot;,\&quot;provCode\&quot;:&quot;+provCode+&quot;,\&quot;datalist\&quot;:[{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;},{\&quot;operationChannel\&quot;:&quot;+operationChannel+&quot;,\&quot;money\&quot;:&quot;+money+&quot;,\&quot;phone\&quot;:&quot;+phone+&quot;,\&quot;userProv\&quot;:&quot;+userProv+&quot;,\&quot;userType\&quot;:&quot;+userType+&quot;,\&quot;pdfFileName\&quot;:&quot;+pdfFileName+&quot;,\&quot;userName\&quot;:&quot;+userName+&quot;,\&quot;userId\&quot;:&quot;+userId+&quot;,\&quot;items\&quot;:&quot;+items+&quot;,\&quot;operationTime\&quot;:&quot;+operationTime+&quot;}],\&quot;pdfFileCode\&quot;:&quot;+pdfFileCode+&quot;,\&quot;cloudPhone\&quot;:&quot;+cloudPhone+&quot;,\&quot;sn\&quot;:&quot;+sn+&quot;,\&quot;md5Code\&quot;:&quot;+md5Code+&quot;,\&quot;channelId\&quot;:&quot;+channelId+&quot;}&quot;;

//log.info(&quot;#############################:&quot;+reqData);

String reqDataDESD = DESDecode.encryptBasedDes(reqData);
reqDataDESD  = reqDataDESD.replaceAll(&quot;\r|\n&quot;, &quot;&quot;);
 
//log.info(&quot;#############################:&quot;+reqDataDESD);

String jsonStr = &quot;{\&quot;params\&quot;:{\&quot;reqData\&quot;:&quot;+&quot;\&quot;&quot;+reqDataDESD+&quot;\&quot;&quot;+&quot;,\&quot;sourceID\&quot;:&quot;+sourceID+&quot;}}&quot;;
vars.put(&quot;jsonStr_7230&quot;,jsonStr);


</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.io.UnsupportedEncodingException;

String str = prev.getResponseDataAsString();
String result = &quot;&quot;;
try {
            result = java.net.URLDecoder.decode(str, &quot;UTF-8&quot;);
     } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
     }
vars.put(&quot;result_plts_7230&quot;,result);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import org.apache.commons.lang3.StringUtils;
import org.json.JSONException;
import org.json.JSONObject;

String result = vars.get(&quot;result_plts_7230&quot;);

if(result.contains(&quot;-9999&quot;) &amp;&amp; result.contains(&quot;pdfFileName字段超长&quot;)){
	Failure=false;
	FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;

}else{

	try {
		JSONObject obj = new JSONObject(result);

		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送成功，返回结果是：&quot;+obj.get(&quot;rtnMsg&quot;);
	} catch (JSONException e) {
		Failure=true;
		FailureMessage = &quot;预期结果推送失败，结果推送失败&quot;;
		e.printStackTrace();
	}
		
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
